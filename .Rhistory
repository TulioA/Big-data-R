peso <- c(80,77,79,97,72,82,88,110,81,78,55,59,56,66,63,67,74,72,55,64)
altura <- c(1.75,1.72,1.72,1.84,1.63,1.78,1.79,1.84,1.79,1.74, 1.53,1.57,1.50,1.58,1.54,1.61,1.70,1.63,1.51,1.60)
sexo <- c("Masculino","Masculino","Masculino","Masculino","Masculino","Masculino","Masculino","Masculino","Masculino","Masculino","Femenino", "Femenino","Femenino", "Femenino","Femenino", "Femenino","Femenino", "Femenino","Femenino", "Femenino")
imc <- c(peso[1:20]/(altura[1:20]*altura[1:20]))
daf <- data.frame(peso, altura, sexo, imc)
#Crear dataframe
peso <- c(80,77,79,97,72,82,88,110,81,78,55,59,56,66,63,67,74,72,55,64)
altura <- c(1.75,1.72,1.72,1.84,1.63,1.78,1.79,1.84,1.79,1.74, 1.53,1.57,1.50,1.58,1.54,1.61,1.70,1.63,1.51,1.60)
sexo <- c("Masculino","Masculino","Masculino","Masculino","Masculino","Masculino","Masculino","Masculino","Masculino","Masculino"
,"Femenino", "Femenino","Femenino", "Femenino","Femenino", "Femenino","Femenino", "Femenino","Femenino", "Femenino")
imc <- c(peso[1:20]/(altura[1:20]*altura[1:20]))
#Crear dataframe
peso <- c(80,77,79,97,72,82,88,110,81,78,55,59,56,66,63,67,74,72,55,64)
altura <- c(1.75,1.72,1.72,1.84,1.63,1.78,1.79,1.84,1.79,1.74, 1.53,1.57,1.50,1.58,1.54,1.61,1.70,1.63,1.51,1.60)
sexo <- c("Masculino","Masculino","Masculino","Masculino","Masculino","Masculino","Masculino","Masculino","Masculino","Masculino","Femenino", "Femenino","Femenino", "Femenino","Femenino", "Femenino","Femenino", "Femenino","Femenino", "Femenino")
imc <- c(peso[1:20]/(altura[1:20]*altura[1:20]))
daf <- data.frame(peso, altura, sexo, imc)
mean(peso)
peso <- c(80,77,79,97,72,82,88,110,81,78,55,59,56,66,63,67,74,72,55,64)
altura <- c(1.75,1.72,1.72,1.84,1.63,1.78,1.79,1.84,1.79,1.74, 1.53,1.57,1.50,1.58,1.54,1.61,1.70,1.63,1.51,1.60)
sexo <- c("Masculino","Masculino","Masculino","Masculino","Masculino","Masculino","Masculino","Masculino","Masculino","Masculino","Femenino", "Femenino","Femenino", "Femenino","Femenino", "Femenino","Femenino", "Femenino","Femenino", "Femenino")
imc <- c(peso[1:20]/(altura[1:20]*altura[1:20]))
daf <- data.frame(peso, altura, sexo, imc)
mean(peso[which(sexo=="Masculino")])
mean(peso[which(sexo=="Femenino")])
mean(peso)
rownames(daf) <- c("Alberto","Miguel","Eric","Osvaldo","Juan","Cruz","Antonio","Ivan","Oscar","Gael","Rosa","Nilda","Marcela","Veronica","Maria","Claudia","Ana","Laura","Karen","Noemi")
daf
hist(x=daf$altura, main = "Altura", xlab = "altura", ylab = "Num estudiantes")
hist(x=daf$altura, main = "Altura", xlab = "altura", ylab = "personas")
a<- c("A":"T")
a<- c("A".."T")
rownames(daf) <- c("A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T")
barplot(daf$altura, main = "Altura", names.arg = row.names(daf), xlab = "Personas", ylab = "Altura")
hist(x=daf$altura, main = "Altura", xlab = "altura", ylab = "personas")
hist(daf$altura, main = "Altura", xlab = "altura", ylab = "personas")
hist(daf$altura, main = "Altura", xlab = "altura", ylab = "personas")
tableDSex <- table(daf$imc, daf$sexo)
print(tableDSex)
tableG <- table(daf$sexo, daf$imc)
print(tableG)
barplot(tableG, main = "Sexo", xlab = "IMC", ylab = "personas")
barplot(daf$imc, main = "Sexo", names.arg = row.names(daf), xlab = "sexo", ylab = "personas")
barplot(daf$imc, main = "Sexo", names.arg = daf$sexo, xlab = "sexo", ylab = "personas")
#Crear dataframe
peso <- c(80,77,79,97,72,82,88,110,81,78,55,59,56,66,63,67,74,72,55,64)
altura <- c(1.75,1.72,1.72,1.84,1.63,1.78,1.79,1.84,1.79,1.74, 1.53,1.57,1.50,1.58,1.54,1.61,1.70,1.63,1.51,1.60)
sexo <- c("M","M","M","M","M","M","M","M","M","M","F", "F","F", "F","F", "F","F", "F","F", "F")
imc <- c(peso[1:20]/(altura[1:20]*altura[1:20]))
daf <- data.frame(peso, altura, sexo, imc)
mean(peso[which(sexo=="M")])
mean(peso[which(sexo=="F")])
mean(peso)
mean(peso[which(sexo=="M")])
mean(peso[which(sexo=="F")])
mean(peso)
#Renombrar
rownames(daf) <- c("A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T")
#Grafica de Altura
#cantidades repetidas intervalos
hist(daf$altura, main = "Altura", xlab = "altura", ylab = "personas")
#completa
barplot(daf$altura, main = "Altura", names.arg = row.names(daf), xlab = "Personas", ylab = "Altura")
barplot(daf$imc, main = "Sexo", names.arg = daf$sexo, xlab = "sexo", ylab = "personas")
peso <- c(80,77,79,97,72,82,88,110,81,78,55,59,56,66,63,67,74,72,55,64)
altura <- c(1.75,1.72,1.72,1.84,1.63,1.78,1.79,1.84,1.79,1.74, 1.53,1.57,1.50,1.58,1.54,1.61,1.70,1.63,1.51,1.60)
sexo <- c("M","M","M","M","M","M","M","M","M","M","F", "F","F", "F","F", "F","F", "F","F", "F")
imc <- c(peso[1:20]/(altura[1:20]*altura[1:20]))
daf <- data.frame(peso, altura, sexo, imc)
mean(peso[which(sexo=="M")])
mean(peso[which(sexo=="F")])
mean(peso)
rownames(daf) <- c("A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T")
daf
barplot(daf$altura, main = "Altura", names.arg = row.names(daf), xlab = "Personas", ylab = "Altura")
barplot(daf$imc, main = "Sexo", names.arg = daf$sexo, xlab = "sexo", ylab = "personas")
peso <- c(80,77,79,97,72,82,88,110,81,78,55,59,56,66,63,67,74,72,55,64)
altura <- c(1.75,1.72,1.72,1.84,1.63,1.78,1.79,1.84,1.79,1.74, 1.53,1.57,1.50,1.58,1.54,1.61,1.70,1.63,1.51,1.60)
sexo <- c("M","M","M","M","M","M","M","M","M","M","F", "F","F", "F","F", "F","F", "F","F", "F")
imc <- c(peso[1:20]/(altura[1:20]*altura[1:20]))
daf <- data.frame(peso, altura, sexo, imc)
daf
ti <- Sys.time()
n <- 4
for (i in 1:(n-1)) {
if( n == 0)
{}
n <- n * i
}
n
ti <- Sys.time()
n <- 4
for (i in 1:(n-1)) {
if( n == 0)
{}
n <- n * i
}
n
print(Sys.time() - ti)
ti <- Sys.time()
i<-1
n2<- 5
vfact <- n2
while(TRUE){
if(i==n2)
break
else
vfact <- vfact * i
i <- i + 1
}
vfact
print(Sys.time() - ti)
ti <- Sys.time()
i<-1
n2<- 4
vfact <- n2
while(TRUE){
if(i==n2)
break
else
vfact <- vfact * i
i <- i + 1
}
vfact
print(Sys.time() - ti)
ti <- Sys.time()
print(factorial(5))
print(Sys.time() - ti)
ti <- Sys.time()
funcionFacto <- function(nfact){
if(nfact==0)
return (1)
else
return(nfact*funcionFacto(nfact-1))
}
funcionFacto(5)
print(Sys.time() - ti)
#Funcion recursiva
ti <- Sys.time()
funcionFacto <- function(nfact){
if(nfact==0)
return (1)
else
return(nfact*funcionFacto(nfact-1))
}
funcionFacto(4)
print(Sys.time() - ti)
